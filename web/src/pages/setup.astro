---
import ThemeSwitcher from "../components/ThemeSwitcher.astro";
import Layout from "../layouts/Base.astro";
---

<Layout title="Setup" hideFooter>
  <section class="container">
    <ThemeSwitcher class="asdf" />
    <h1>Let's get started</h1>
    <p>
      Enter a new username and password to create your administrator account.
    </p>
    <form onsubmit="return false;" id="login-form">
      <label>
        Username
        <input
          type="text"
          name="username"
          value="admin"
          aria-label="Username"
          autocomplete="username"
          pattern="[a-zA-Z0-9]{3,}"
          required
        />
      </label>
      <label>
        Password
        <input
          type="password"
          name="password"
          minlength="8"
          aria-label="Password"
          autocomplete="new-password"
          required
        />
      </label>
      <button type="submit">Finish Setup</button>
      <article
        role="alert"
        aria-live="assertive"
        aria-atomic="true"
        aria-hidden="true"
      >
        Invalid setup token. Did you already set up your account?
      </article>
    </form>
  </section>
</Layout>

<script>
  import { api } from "../api/client";
  import { navigate } from "astro:transitions/client";

  document.addEventListener("astro:page-load", () => {
    const form = document.getElementById("login-form") as HTMLFormElement;
    const alert = form?.querySelector("#login-form article") as HTMLElement;
    if (!form || !alert) return;

    const token = new URLSearchParams(document.location.search).get("t") || "";
    form.onsubmit = (e) => {
      e.preventDefault();
      e.stopPropagation();
      alert.setAttribute("aria-hidden", "true");

      const formData = new FormData(form);
      const { username, password } = Object.fromEntries(formData.entries()) as {
        username: string;
        password: string;
      };

      api["/api/dashboard/auth/setup"]
        .post({ json: { username, password, token } })
        .then((res) => {
          if (!res.ok)
            return Promise.reject(new Error("Invalid token or username"));

          navigate("/login");
        })
        .catch((_) => alert.setAttribute("aria-hidden", "false"));

      return false;
    };
  });
</script>

<style>
  :global(#theme-switcher) {
    position: absolute;
    padding: 1rem;
    top: 0;
    right: 0;
  }

  section {
    display: flex;
    flex-direction: column;
    justify-content: center;
    max-width: 25rem;
    height: 100%;

    #login-form {
      position: relative;
    }

    article {
      position: absolute;
      display: none;
      color: rgb(255, 85, 85);
      width: 100%;
      text-align: center;

      &[aria-hidden="false"] {
        display: block;
      }
    }
  }
</style>
